exit
user.payments.default
exit
user.payments.default.save!
user.payments.default.save
user.payments.default
user.transactions.holds
exit
user.payments.default
exit
user.payments.default
user.transactions.holds.first.payment
user.transactions.holds
exit
payment
profile.payments.default
profile.payments
profile
exit
subscription1.next_transaction_date
exit
subscription1.next_transaction_date
c
length
c
length
c
length
c
length
exit
subscription1.length
subscription1.start_date
subscription1.transactions.order(created_at: :desc).first.try(:created_at)
subscription1.transactions
subscription1.next_transaction_date
exit
subscription1.next_transaction_date
exit
subscription1.next_transaction_date
exit
service_subscription.sync!
service_subscription.delete?
exit
service_subscription.delete?
service_subscription.sync!
service_subscription.resource.destroyed?
service_subscription.resource.new_record?
service_subscription.resource
exit
Logger.new(Rails.root.join('log', 'accounting.log'), 'weekly').respond_to?(:tagged)
Logger.new('/path/to/log.log').respond_to?(:tagged)
Logger.new.respond_to?(:tagged)
Accounting.config.logger.respond_to?(:tagged)
Accounting.config.logger
exit
puts caller
caller
exception.message
c
service
c
service
c
service
c
service
c
delete?
profile
payload
c
response.headers
OpenSSL::HMAC.hexdigest('SHA512', Accounting.config.signature, valid_payload).upcase
c
params
exit
params
c
params
c
request.body.read
exit
request.body.read
signature.blank?
c
signature.blank?
signature
request.headers['HTTP_X_ANET_SIGNATURE']
exit
request.headers['HTTP_X_ANET_SIGNATURE']
exit
request.headers['HTTP_X_ANET_SIGNATURE']
signature
exit
request.headers['HTTP_X_ANET_SIGNATURE']
c
request.headers
response.headers
c
response.headers
c
response.headers
c
exit
response.request.headers
response.request.headers.keys
response.request.headers
response.headers
c
@request.env.keys
exit
@request.env.keys
@request
c
puts public_methods.sort
c
puts request.headers.to_yaml
response.headers
exit
response.headers
c
x
request.headers
q
puts request.public_methods.sort
puts response.to_yaml
response.env
response
response.headers
c
puts request.headers.to_yaml
request.headers
c
request.headers['X-ANET-Signature'] = 'sha512=2E17B31056F098C5A300023E957FB0A19DB3F3800485454AA04F71A869386F4EDFDC31EA4A952B449550CFE8F19681FDBA7E6AAB2BA5FFC23F4E9CD638CADAAC'
puts request.headers.public_methods.sort
request.headers
puts request.headers.to_yaml
request.headers
exit
response.headers
exit
exi
response.headers
exit
response.headers
exit
exi
hook_profile[:payload][:paymentProfiles].count
hook_profile[:payload][:paymentProfiles]
hook_profile[:payload]
hook_profile
exit
service_payment_card.resource.destroyed?
service_payment_card.resource
exit
service_payment_card.resource
service_payment_card.resource.destroyed?
service_payment_card.delete?
exit
service_payment_card.delete?
delete?
c
delete?
c
delete?
c
event
delete?
exit
service_payment_card.delete?
service_payment_card.event = 'deleted'
service_payment_card.delete?
service_payment_card.resource.destroyed?
service_payment_card.resource
c
service_payment.resource
exit
service_payment.resource
exit
Accounting::Profile.all
c
Accounting::Profile.all
exit
profile_ach.new_record?
profile_ach
Accounting::Profile.all
exit
service_ach.payload[:customer_profile_id]
profile_card
profile_ach
c
profile_valid
exit
profile_valid
exit
service_valid.payload[:customer_profile_id]
service_valid
service_valid.resource.details
service_valid
service_valid.resource.details
service_valid.resource
service_valid
profile_valid
exit
profile_unknown.id
service_subscription.resource
service_subscription.profile.payments
service_subscription.resource.payments
service_subscription.payments
service_subscription.payment
c
service_subscription.payment
service_subscription.resource
service_subscription.resource.profile_id = profile.id
service_subscription.resource
exit
service_subscription.resource
c
service_subscription.resource.profile
service_subscription.resource.subscription.profile
exit
service_subscription.resource.subscription.profile
service_subscription.resource.profile
service_subscription.resource
exit
service_subscription.resource
service_subscription
service_subscription.resource.profile
service_subscription.resource.subscription.profile
service_subscription.resource.subscription
service_subscription.resource
c
profile_subscription
c
service_subscription.subscription
exit
service_subscription.resource.details.subscription_id.to_i
service_subscription.resource.details.subscription_id
Accounting::Subscription.find_by(subscription_id: service_subscription.resource.details.subscription_id)
Accounting::Subscription.find_by(subscription_id: service_subscription.resource.details.subscription_id.to_i)
service_subscription.subscription
service_subscription.resource.details.subscription_paynum.present?
service_subscription.resource.details.subscription_id.present?
service_subscription.subscription?
exit
subscription
c
subscription
exit
subscription
c
puts service_subscription.resource.details.to_yaml
exit
puts service_subscription.resource.details.to_yaml
exit
